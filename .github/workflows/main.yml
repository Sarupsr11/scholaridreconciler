name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    name: Setup Database
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install .[test]
      
      - name: Setup database
        run: |
          mkdir -p src/scholaridreconciler/services/.cache/db
          python src/scholaridreconciler/services/organisation_data.py
      
      - name: Cache database
        uses: actions/cache@v4
        with:
          path: src/scholaridreconciler/services/.cache/db
          key: database-cache-${{ github.run_id }}
          restore-keys: database-cache-

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore database cache
        uses: actions/cache@v4
        with:
          path: src/scholaridreconciler/services/.cache/db
          key: database-cache-${{ github.run_id }}
          restore-keys: database-cache-

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install .[test]
      
      - name: Run tests
        run: tox -e py
      
      - name: Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: coverage.xml

  lint:
    name: Run Linting
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install .[test]
      
      - name: Run linting
        run: |
          tox -e format
          tox -e lint

  coverage:
    name: Check Test Coverage
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          pip install .[test]
      
      - name: Run coverage
        run: tox -e coverage
      
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml
      
      - name: Report Coverage
        run: |
          grep -E '(?i)total.*? (100(?:\.0+)?%|[1-9]?\d(?:\.\d+)?%)$' coverage.xml || true

  type_check:
    name: Static Type Check
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          pip install .[test]
      
      - name: Run type checks
        run: tox -e type

